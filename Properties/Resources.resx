<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="btnChat" xml:space="preserve">
    <value>Chat</value>
  </data>
  <data name="btnCredits" xml:space="preserve">
    <value>Credits</value>
  </data>
  <data name="btnEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="btnInvite" xml:space="preserve">
    <value>Invite</value>
  </data>
  <data name="btnJoin" xml:space="preserve">
    <value>Join</value>
  </data>
  <data name="btnKick" xml:space="preserve">
    <value>Kick</value>
  </data>
  <data name="btnLogin" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="btnLogOut" xml:space="preserve">
    <value>Log Out</value>
  </data>
  <data name="btnPlay" xml:space="preserve">
    <value>To Play!</value>
  </data>
  <data name="btnRegister" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="btnSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="btnScore" xml:space="preserve">
    <value>Score</value>
  </data>
  <data name="btnSend" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="btnStart" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="btnValidate" xml:space="preserve">
    <value>Validate</value>
  </data>
  <data name="labelAccount" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="labelCode" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="labelCredits" xml:space="preserve">
    <value>Credits</value>
  </data>
  <data name="labelDevelopers" xml:space="preserve">
    <value>Developers</value>
  </data>
  <data name="labelEmail" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="labelEnterCode" xml:space="preserve">
    <value>Enter your code here:</value>
  </data>
  <data name="labelExampleEmail" xml:space="preserve">
    <value>Ex.: revo.pa@uv.mx</value>
  </data>
  <data name="labelExampleFirstName" xml:space="preserve">
    <value>Ex.: Juan Carlos</value>
  </data>
  <data name="labelExampleLastName" xml:space="preserve">
    <value>Ex.: Perez Arriaga</value>
  </data>
  <data name="labelExampleUser" xml:space="preserve">
    <value>Ex.: RevoGamer</value>
  </data>
  <data name="labelExampleUserName" xml:space="preserve">
    <value>Ex.: LuisGamer</value>
  </data>
  <data name="labelFirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="labelForgotPassword" xml:space="preserve">
    <value>Forgot password?</value>
  </data>
  <data name="labelGameMode" xml:space="preserve">
    <value>Game Mode</value>
  </data>
  <data name="labelGraphicDesigners" xml:space="preserve">
    <value>Graphic Designers</value>
  </data>
  <data name="labelGuestInfo" xml:space="preserve">
    <value>To enter as a guest type the room code.</value>
  </data>
  <data name="labelGuestPlayer" xml:space="preserve">
    <value>Guest Player</value>
  </data>
  <data name="labelHelp" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="labelInvitation" xml:space="preserve">
    <value>you have been invited to join a lobby!!</value>
  </data>
  <data name="labelLanguage" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="labelLastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="labelMultiplayerMode" xml:space="preserve">
    <value>Play with friends!</value>
  </data>
  <data name="labelMusicEffects" xml:space="preserve">
    <value>Music Effects</value>
  </data>
  <data name="labelName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="labelOptions" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="labelPassword" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="labelScore" xml:space="preserve">
    <value>Score</value>
  </data>
  <data name="labelSettings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="labelSingleMode" xml:space="preserve">
    <value>Single player mode</value>
  </data>
  <data name="labelSoundEffects" xml:space="preserve">
    <value>Sound Effects</value>
  </data>
  <data name="labelStatusRoundOff" xml:space="preserve">
    <value>Round not started</value>
  </data>
  <data name="labelTheme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="labelUserName" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="labelValidateMail" xml:space="preserve">
    <value>A validation code has been sent to your email.</value>
  </data>
  <data name="messageBoxCare" xml:space="preserve">
    <value>Care!!</value>
  </data>
  <data name="messageBoxConnectionError" xml:space="preserve">
    <value>Server connection failed, try again later</value>
  </data>
  <data name="messageBoxEmptyFields" xml:space="preserve">
    <value>There are one or more missing fields, please correct them.</value>
  </data>
  <data name="messageBoxEndGame" xml:space="preserve">
    <value>The game is over and the winner is</value>
  </data>
  <data name="messageBoxErrorLobby" xml:space="preserve">
    <value>A minimum of 2 participants is required for this game mode.</value>
  </data>
  <data name="messageBoxErrorLogin" xml:space="preserve">
    <value>Invalid user or password, verify your information.</value>
  </data>
  <data name="messageBoxErrorMessage" xml:space="preserve">
    <value>Your message wasn't delivered, try again later</value>
  </data>
  <data name="messageBoxErrorRegister" xml:space="preserve">
    <value>Error occurred, registration didn't take effect.</value>
  </data>
  <data name="messageBoxExitGame" xml:space="preserve">
    <value>Are you sure you will make it out of the round? opponent will win</value>
  </data>
  <data name="messageBoxInvalidCode" xml:space="preserve">
    <value>Invalid invitation code, there is no associated lobby.</value>
  </data>
  <data name="messageBoxInvalidEmail" xml:space="preserve">
    <value>The email entered is invalid.</value>
  </data>
  <data name="messageBoxInvalidName" xml:space="preserve">
    <value>If the name entered is not available, enter another one.</value>
  </data>
  <data name="messageBoxInvalidPassword" xml:space="preserve">
    <value>The password entered is invalid, check the password policy.</value>
  </data>
  <data name="messageBoxLeave" xml:space="preserve">
    <value>Are you sure you want to leave? Modifications will not be saved.</value>
  </data>
  <data name="messageBoxMailInUse" xml:space="preserve">
    <value>The user is already registered with this e-mail address, please use another e-mail address.</value>
  </data>
  <data name="messageBoxSavedChanges" xml:space="preserve">
    <value>The changes made have been saved</value>
  </data>
  <data name="messageBoxSearch" xml:space="preserve">
    <value>No user with the given name was found.</value>
  </data>
  <data name="messageBoxSuccessfulRegistration" xml:space="preserve">
    <value>Successful registration.</value>
  </data>
  <data name="messageBoxVerifyNameAndEmail" xml:space="preserve">
    <value>Verify that the e-mail address you enter and the name are valid.</value>
  </data>
  <data name="messageBoxWelcomeGame" xml:space="preserve">
    <value>Welcome to 100 Mexicanos Dijieron!</value>
  </data>
  <data name="messageChatFrom" xml:space="preserve">
    <value>From:</value>
  </data>
  <data name="messageCorrectCode" xml:space="preserve">
    <value>Your email has been verified, Thank you.</value>
  </data>
  <data name="messageIncorrectCode" xml:space="preserve">
    <value>The code is incorrect.</value>
  </data>
  <data name="messageSystem" xml:space="preserve">
    <value>System: Welcome</value>
  </data>
  <data name="messageWelcome" xml:space="preserve">
    <value>Hello again</value>
  </data>
  <data name="messageWisp" xml:space="preserve">
    <value>Wisp from</value>
  </data>
  <data name="radioBEnglish" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="radioBSpanish" xml:space="preserve">
    <value>Spanish</value>
  </data>
  <data name="radioBtnDark" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="textStatusRoundOn" xml:space="preserve">
    <value>Round Started</value>
  </data>
</root>