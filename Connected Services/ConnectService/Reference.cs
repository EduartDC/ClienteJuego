//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClienteJuego.ConnectService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/DataBase")]
    [System.SerializableAttribute()]
    public partial class Player : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClienteJuego.ConnectService.Friend[] FriendsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClienteJuego.ConnectService.Match[] MatchesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idPlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool statusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClienteJuego.ConnectService.Friend[] Friends {
            get {
                return this.FriendsField;
            }
            set {
                if ((object.ReferenceEquals(this.FriendsField, value) != true)) {
                    this.FriendsField = value;
                    this.RaisePropertyChanged("Friends");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClienteJuego.ConnectService.Match[] Matches {
            get {
                return this.MatchesField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchesField, value) != true)) {
                    this.MatchesField = value;
                    this.RaisePropertyChanged("Matches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idPlayer {
            get {
                return this.idPlayerField;
            }
            set {
                if ((this.idPlayerField.Equals(value) != true)) {
                    this.idPlayerField = value;
                    this.RaisePropertyChanged("idPlayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool status {
            get {
                return this.statusField;
            }
            set {
                if ((this.statusField.Equals(value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Friend", Namespace="http://schemas.datacontract.org/2004/07/DataBase")]
    [System.SerializableAttribute()]
    public partial class Friend : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClienteJuego.ConnectService.Player PlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Player_idPlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idFriendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idPlayerOneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClienteJuego.ConnectService.Player Player {
            get {
                return this.PlayerField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerField, value) != true)) {
                    this.PlayerField = value;
                    this.RaisePropertyChanged("Player");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Player_idPlayer {
            get {
                return this.Player_idPlayerField;
            }
            set {
                if ((this.Player_idPlayerField.Equals(value) != true)) {
                    this.Player_idPlayerField = value;
                    this.RaisePropertyChanged("Player_idPlayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                if ((this.dateField.Equals(value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idFriend {
            get {
                return this.idFriendField;
            }
            set {
                if ((this.idFriendField.Equals(value) != true)) {
                    this.idFriendField = value;
                    this.RaisePropertyChanged("idFriend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idPlayerOne {
            get {
                return this.idPlayerOneField;
            }
            set {
                if ((this.idPlayerOneField.Equals(value) != true)) {
                    this.idPlayerOneField = value;
                    this.RaisePropertyChanged("idPlayerOne");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Match", Namespace="http://schemas.datacontract.org/2004/07/DataBase")]
    [System.SerializableAttribute()]
    public partial class Match : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClienteJuego.ConnectService.Player[] PlayersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClienteJuego.ConnectService.Question[] QuestionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idMatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string inviteCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int playerWinnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int scorePlayerOneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int scorePlayerTwoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClienteJuego.ConnectService.Player[] Players {
            get {
                return this.PlayersField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayersField, value) != true)) {
                    this.PlayersField = value;
                    this.RaisePropertyChanged("Players");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClienteJuego.ConnectService.Question[] Questions {
            get {
                return this.QuestionsField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionsField, value) != true)) {
                    this.QuestionsField = value;
                    this.RaisePropertyChanged("Questions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idMatch {
            get {
                return this.idMatchField;
            }
            set {
                if ((this.idMatchField.Equals(value) != true)) {
                    this.idMatchField = value;
                    this.RaisePropertyChanged("idMatch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string inviteCode {
            get {
                return this.inviteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.inviteCodeField, value) != true)) {
                    this.inviteCodeField = value;
                    this.RaisePropertyChanged("inviteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int playerWinner {
            get {
                return this.playerWinnerField;
            }
            set {
                if ((this.playerWinnerField.Equals(value) != true)) {
                    this.playerWinnerField = value;
                    this.RaisePropertyChanged("playerWinner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int scorePlayerOne {
            get {
                return this.scorePlayerOneField;
            }
            set {
                if ((this.scorePlayerOneField.Equals(value) != true)) {
                    this.scorePlayerOneField = value;
                    this.RaisePropertyChanged("scorePlayerOne");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int scorePlayerTwo {
            get {
                return this.scorePlayerTwoField;
            }
            set {
                if ((this.scorePlayerTwoField.Equals(value) != true)) {
                    this.scorePlayerTwoField = value;
                    this.RaisePropertyChanged("scorePlayerTwo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Question", Namespace="http://schemas.datacontract.org/2004/07/DataBase")]
    [System.SerializableAttribute()]
    public partial class Question : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClienteJuego.ConnectService.Answer[] AnswersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClienteJuego.ConnectService.Match[] MatchesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idQuestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string question1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string questionClassField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClienteJuego.ConnectService.Answer[] Answers {
            get {
                return this.AnswersField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswersField, value) != true)) {
                    this.AnswersField = value;
                    this.RaisePropertyChanged("Answers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClienteJuego.ConnectService.Match[] Matches {
            get {
                return this.MatchesField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchesField, value) != true)) {
                    this.MatchesField = value;
                    this.RaisePropertyChanged("Matches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idQuestion {
            get {
                return this.idQuestionField;
            }
            set {
                if ((this.idQuestionField.Equals(value) != true)) {
                    this.idQuestionField = value;
                    this.RaisePropertyChanged("idQuestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string question1 {
            get {
                return this.question1Field;
            }
            set {
                if ((object.ReferenceEquals(this.question1Field, value) != true)) {
                    this.question1Field = value;
                    this.RaisePropertyChanged("question1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string questionClass {
            get {
                return this.questionClassField;
            }
            set {
                if ((object.ReferenceEquals(this.questionClassField, value) != true)) {
                    this.questionClassField = value;
                    this.RaisePropertyChanged("questionClass");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Answer", Namespace="http://schemas.datacontract.org/2004/07/DataBase")]
    [System.SerializableAttribute()]
    public partial class Answer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClienteJuego.ConnectService.Question[] QuestionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string answer1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idAnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int placeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int scoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClienteJuego.ConnectService.Question[] Questions {
            get {
                return this.QuestionsField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionsField, value) != true)) {
                    this.QuestionsField = value;
                    this.RaisePropertyChanged("Questions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string answer1 {
            get {
                return this.answer1Field;
            }
            set {
                if ((object.ReferenceEquals(this.answer1Field, value) != true)) {
                    this.answer1Field = value;
                    this.RaisePropertyChanged("answer1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idAnswer {
            get {
                return this.idAnswerField;
            }
            set {
                if ((this.idAnswerField.Equals(value) != true)) {
                    this.idAnswerField = value;
                    this.RaisePropertyChanged("idAnswer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int place {
            get {
                return this.placeField;
            }
            set {
                if ((this.placeField.Equals(value) != true)) {
                    this.placeField = value;
                    this.RaisePropertyChanged("place");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int score {
            get {
                return this.scoreField;
            }
            set {
                if ((this.scoreField.Equals(value) != true)) {
                    this.scoreField = value;
                    this.RaisePropertyChanged("score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/MessageService")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConnectService.IUserManager")]
    public interface IUserManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/AddPlayer", ReplyAction="http://tempuri.org/IUserManager/AddPlayerResponse")]
        int AddPlayer(ClienteJuego.ConnectService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/AddPlayer", ReplyAction="http://tempuri.org/IUserManager/AddPlayerResponse")]
        System.Threading.Tasks.Task<int> AddPlayerAsync(ClienteJuego.ConnectService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/ValidatePlayer", ReplyAction="http://tempuri.org/IUserManager/ValidatePlayerResponse")]
        int ValidatePlayer(ClienteJuego.ConnectService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/ValidatePlayer", ReplyAction="http://tempuri.org/IUserManager/ValidatePlayerResponse")]
        System.Threading.Tasks.Task<int> ValidatePlayerAsync(ClienteJuego.ConnectService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/ValidateEmailPlayer", ReplyAction="http://tempuri.org/IUserManager/ValidateEmailPlayerResponse")]
        int ValidateEmailPlayer(ClienteJuego.ConnectService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/ValidateEmailPlayer", ReplyAction="http://tempuri.org/IUserManager/ValidateEmailPlayerResponse")]
        System.Threading.Tasks.Task<int> ValidateEmailPlayerAsync(ClienteJuego.ConnectService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/ValidateUserNamePlayer", ReplyAction="http://tempuri.org/IUserManager/ValidateUserNamePlayerResponse")]
        int ValidateUserNamePlayer(ClienteJuego.ConnectService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/ValidateUserNamePlayer", ReplyAction="http://tempuri.org/IUserManager/ValidateUserNamePlayerResponse")]
        System.Threading.Tasks.Task<int> ValidateUserNamePlayerAsync(ClienteJuego.ConnectService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdatePlayer", ReplyAction="http://tempuri.org/IUserManager/UpdatePlayerResponse")]
        int UpdatePlayer(ClienteJuego.ConnectService.Player newPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdatePlayer", ReplyAction="http://tempuri.org/IUserManager/UpdatePlayerResponse")]
        System.Threading.Tasks.Task<int> UpdatePlayerAsync(ClienteJuego.ConnectService.Player newPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/SearchPlayer", ReplyAction="http://tempuri.org/IUserManager/SearchPlayerResponse")]
        ClienteJuego.ConnectService.Player SearchPlayer(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/SearchPlayer", ReplyAction="http://tempuri.org/IUserManager/SearchPlayerResponse")]
        System.Threading.Tasks.Task<ClienteJuego.ConnectService.Player> SearchPlayerAsync(string userName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagerChannel : ClienteJuego.ConnectService.IUserManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagerClient : System.ServiceModel.ClientBase<ClienteJuego.ConnectService.IUserManager>, ClienteJuego.ConnectService.IUserManager {
        
        public UserManagerClient() {
        }
        
        public UserManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddPlayer(ClienteJuego.ConnectService.Player player) {
            return base.Channel.AddPlayer(player);
        }
        
        public System.Threading.Tasks.Task<int> AddPlayerAsync(ClienteJuego.ConnectService.Player player) {
            return base.Channel.AddPlayerAsync(player);
        }
        
        public int ValidatePlayer(ClienteJuego.ConnectService.Player player) {
            return base.Channel.ValidatePlayer(player);
        }
        
        public System.Threading.Tasks.Task<int> ValidatePlayerAsync(ClienteJuego.ConnectService.Player player) {
            return base.Channel.ValidatePlayerAsync(player);
        }
        
        public int ValidateEmailPlayer(ClienteJuego.ConnectService.Player player) {
            return base.Channel.ValidateEmailPlayer(player);
        }
        
        public System.Threading.Tasks.Task<int> ValidateEmailPlayerAsync(ClienteJuego.ConnectService.Player player) {
            return base.Channel.ValidateEmailPlayerAsync(player);
        }
        
        public int ValidateUserNamePlayer(ClienteJuego.ConnectService.Player player) {
            return base.Channel.ValidateUserNamePlayer(player);
        }
        
        public System.Threading.Tasks.Task<int> ValidateUserNamePlayerAsync(ClienteJuego.ConnectService.Player player) {
            return base.Channel.ValidateUserNamePlayerAsync(player);
        }
        
        public int UpdatePlayer(ClienteJuego.ConnectService.Player newPlayer) {
            return base.Channel.UpdatePlayer(newPlayer);
        }
        
        public System.Threading.Tasks.Task<int> UpdatePlayerAsync(ClienteJuego.ConnectService.Player newPlayer) {
            return base.Channel.UpdatePlayerAsync(newPlayer);
        }
        
        public ClienteJuego.ConnectService.Player SearchPlayer(string userName) {
            return base.Channel.SearchPlayer(userName);
        }
        
        public System.Threading.Tasks.Task<ClienteJuego.ConnectService.Player> SearchPlayerAsync(string userName) {
            return base.Channel.SearchPlayerAsync(userName);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConnectService.IChatService", CallbackContract=typeof(ClienteJuego.ConnectService.IChatServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IChatService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/Connect", ReplyAction="http://tempuri.org/IChatService/ConnectResponse")]
        void Connect(ClienteJuego.ConnectService.Player player, int idMatch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/Connect", ReplyAction="http://tempuri.org/IChatService/ConnectResponse")]
        System.Threading.Tasks.Task ConnectAsync(ClienteJuego.ConnectService.Player player, int idMatch);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/Say")]
        void Say(int idMatch, ClienteJuego.ConnectService.Message msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/Say")]
        System.Threading.Tasks.Task SayAsync(int idMatch, ClienteJuego.ConnectService.Message msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/Whisper")]
        void Whisper(ClienteJuego.ConnectService.Message msg, ClienteJuego.ConnectService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/Whisper")]
        System.Threading.Tasks.Task WhisperAsync(ClienteJuego.ConnectService.Message msg, ClienteJuego.ConnectService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, Action="http://tempuri.org/IChatService/Disconnect")]
        void Disconnect(ClienteJuego.ConnectService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, Action="http://tempuri.org/IChatService/Disconnect")]
        System.Threading.Tasks.Task DisconnectAsync(ClienteJuego.ConnectService.Player player);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/RefreshClients")]
        void RefreshClients(ClienteJuego.ConnectService.Player[] players);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/Receive")]
        void Receive(ClienteJuego.ConnectService.Message[] messages);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/ReceiveWhisper")]
        void ReceiveWhisper(ClienteJuego.ConnectService.Message msg, ClienteJuego.ConnectService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/UserJoin")]
        void UserJoin(ClienteJuego.ConnectService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/UserLeave")]
        void UserLeave(ClienteJuego.ConnectService.Player player);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatServiceChannel : ClienteJuego.ConnectService.IChatService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatServiceClient : System.ServiceModel.DuplexClientBase<ClienteJuego.ConnectService.IChatService>, ClienteJuego.ConnectService.IChatService {
        
        public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Connect(ClienteJuego.ConnectService.Player player, int idMatch) {
            base.Channel.Connect(player, idMatch);
        }
        
        public System.Threading.Tasks.Task ConnectAsync(ClienteJuego.ConnectService.Player player, int idMatch) {
            return base.Channel.ConnectAsync(player, idMatch);
        }
        
        public void Say(int idMatch, ClienteJuego.ConnectService.Message msg) {
            base.Channel.Say(idMatch, msg);
        }
        
        public System.Threading.Tasks.Task SayAsync(int idMatch, ClienteJuego.ConnectService.Message msg) {
            return base.Channel.SayAsync(idMatch, msg);
        }
        
        public void Whisper(ClienteJuego.ConnectService.Message msg, ClienteJuego.ConnectService.Player player) {
            base.Channel.Whisper(msg, player);
        }
        
        public System.Threading.Tasks.Task WhisperAsync(ClienteJuego.ConnectService.Message msg, ClienteJuego.ConnectService.Player player) {
            return base.Channel.WhisperAsync(msg, player);
        }
        
        public void Disconnect(ClienteJuego.ConnectService.Player player) {
            base.Channel.Disconnect(player);
        }
        
        public System.Threading.Tasks.Task DisconnectAsync(ClienteJuego.ConnectService.Player player) {
            return base.Channel.DisconnectAsync(player);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConnectService.IMatchService")]
    public interface IMatchService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/StartLobby", ReplyAction="http://tempuri.org/IMatchService/StartLobbyResponse")]
        void StartLobby(ClienteJuego.ConnectService.Player[] players, ClienteJuego.ConnectService.Match newMatch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/StartLobby", ReplyAction="http://tempuri.org/IMatchService/StartLobbyResponse")]
        System.Threading.Tasks.Task StartLobbyAsync(ClienteJuego.ConnectService.Player[] players, ClienteJuego.ConnectService.Match newMatch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/CreatetMatch", ReplyAction="http://tempuri.org/IMatchService/CreatetMatchResponse")]
        void CreatetMatch(ClienteJuego.ConnectService.Match newMatch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/CreatetMatch", ReplyAction="http://tempuri.org/IMatchService/CreatetMatchResponse")]
        System.Threading.Tasks.Task CreatetMatchAsync(ClienteJuego.ConnectService.Match newMatch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/DisconnectFromMatch", ReplyAction="http://tempuri.org/IMatchService/DisconnectFromMatchResponse")]
        void DisconnectFromMatch(ClienteJuego.ConnectService.Match match);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/DisconnectFromMatch", ReplyAction="http://tempuri.org/IMatchService/DisconnectFromMatchResponse")]
        System.Threading.Tasks.Task DisconnectFromMatchAsync(ClienteJuego.ConnectService.Match match);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/ConnectToMatch", ReplyAction="http://tempuri.org/IMatchService/ConnectToMatchResponse")]
        void ConnectToMatch(ClienteJuego.ConnectService.Match match);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/ConnectToMatch", ReplyAction="http://tempuri.org/IMatchService/ConnectToMatchResponse")]
        System.Threading.Tasks.Task ConnectToMatchAsync(ClienteJuego.ConnectService.Match match);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMatchServiceChannel : ClienteJuego.ConnectService.IMatchService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MatchServiceClient : System.ServiceModel.ClientBase<ClienteJuego.ConnectService.IMatchService>, ClienteJuego.ConnectService.IMatchService {
        
        public MatchServiceClient() {
        }
        
        public MatchServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MatchServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MatchServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MatchServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void StartLobby(ClienteJuego.ConnectService.Player[] players, ClienteJuego.ConnectService.Match newMatch) {
            base.Channel.StartLobby(players, newMatch);
        }
        
        public System.Threading.Tasks.Task StartLobbyAsync(ClienteJuego.ConnectService.Player[] players, ClienteJuego.ConnectService.Match newMatch) {
            return base.Channel.StartLobbyAsync(players, newMatch);
        }
        
        public void CreatetMatch(ClienteJuego.ConnectService.Match newMatch) {
            base.Channel.CreatetMatch(newMatch);
        }
        
        public System.Threading.Tasks.Task CreatetMatchAsync(ClienteJuego.ConnectService.Match newMatch) {
            return base.Channel.CreatetMatchAsync(newMatch);
        }
        
        public void DisconnectFromMatch(ClienteJuego.ConnectService.Match match) {
            base.Channel.DisconnectFromMatch(match);
        }
        
        public System.Threading.Tasks.Task DisconnectFromMatchAsync(ClienteJuego.ConnectService.Match match) {
            return base.Channel.DisconnectFromMatchAsync(match);
        }
        
        public void ConnectToMatch(ClienteJuego.ConnectService.Match match) {
            base.Channel.ConnectToMatch(match);
        }
        
        public System.Threading.Tasks.Task ConnectToMatchAsync(ClienteJuego.ConnectService.Match match) {
            return base.Channel.ConnectToMatchAsync(match);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConnectService.IGameService")]
    public interface IGameService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetQuestions", ReplyAction="http://tempuri.org/IGameService/GetQuestionsResponse")]
        ClienteJuego.ConnectService.Question[] GetQuestions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetQuestions", ReplyAction="http://tempuri.org/IGameService/GetQuestionsResponse")]
        System.Threading.Tasks.Task<ClienteJuego.ConnectService.Question[]> GetQuestionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetAnswers", ReplyAction="http://tempuri.org/IGameService/GetAnswersResponse")]
        ClienteJuego.ConnectService.Answer[] GetAnswers(ClienteJuego.ConnectService.Question question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetAnswers", ReplyAction="http://tempuri.org/IGameService/GetAnswersResponse")]
        System.Threading.Tasks.Task<ClienteJuego.ConnectService.Answer[]> GetAnswersAsync(ClienteJuego.ConnectService.Question question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/addPoints", ReplyAction="http://tempuri.org/IGameService/addPointsResponse")]
        int addPoints(ClienteJuego.ConnectService.Player player, int score);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/addPoints", ReplyAction="http://tempuri.org/IGameService/addPointsResponse")]
        System.Threading.Tasks.Task<int> addPointsAsync(ClienteJuego.ConnectService.Player player, int score);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/UpdateBoard", ReplyAction="http://tempuri.org/IGameService/UpdateBoardResponse")]
        void UpdateBoard();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/UpdateBoard", ReplyAction="http://tempuri.org/IGameService/UpdateBoardResponse")]
        System.Threading.Tasks.Task UpdateBoardAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/UpdateStrikes", ReplyAction="http://tempuri.org/IGameService/UpdateStrikesResponse")]
        void UpdateStrikes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/UpdateStrikes", ReplyAction="http://tempuri.org/IGameService/UpdateStrikesResponse")]
        System.Threading.Tasks.Task UpdateStrikesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameServiceChannel : ClienteJuego.ConnectService.IGameService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameServiceClient : System.ServiceModel.ClientBase<ClienteJuego.ConnectService.IGameService>, ClienteJuego.ConnectService.IGameService {
        
        public GameServiceClient() {
        }
        
        public GameServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GameServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClienteJuego.ConnectService.Question[] GetQuestions() {
            return base.Channel.GetQuestions();
        }
        
        public System.Threading.Tasks.Task<ClienteJuego.ConnectService.Question[]> GetQuestionsAsync() {
            return base.Channel.GetQuestionsAsync();
        }
        
        public ClienteJuego.ConnectService.Answer[] GetAnswers(ClienteJuego.ConnectService.Question question) {
            return base.Channel.GetAnswers(question);
        }
        
        public System.Threading.Tasks.Task<ClienteJuego.ConnectService.Answer[]> GetAnswersAsync(ClienteJuego.ConnectService.Question question) {
            return base.Channel.GetAnswersAsync(question);
        }
        
        public int addPoints(ClienteJuego.ConnectService.Player player, int score) {
            return base.Channel.addPoints(player, score);
        }
        
        public System.Threading.Tasks.Task<int> addPointsAsync(ClienteJuego.ConnectService.Player player, int score) {
            return base.Channel.addPointsAsync(player, score);
        }
        
        public void UpdateBoard() {
            base.Channel.UpdateBoard();
        }
        
        public System.Threading.Tasks.Task UpdateBoardAsync() {
            return base.Channel.UpdateBoardAsync();
        }
        
        public void UpdateStrikes() {
            base.Channel.UpdateStrikes();
        }
        
        public System.Threading.Tasks.Task UpdateStrikesAsync() {
            return base.Channel.UpdateStrikesAsync();
        }
    }
}
